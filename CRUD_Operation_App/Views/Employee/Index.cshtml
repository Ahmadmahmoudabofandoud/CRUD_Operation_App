@model IEnumerable<EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
}

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert alert-primary">
        @TempData["Message"]
    </div>
}

<h1>All Employees</h1>
<br />
<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>
<br />
<div class="mt-3 row justify-content-center align-items-center">
    <form asp-action="Index" class="row col-8 offset-2">
        <div class="col-8">
            <input type="text" class="form-control" name="searchInp" id="searchInp" placeholder="Search By Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>
<br />

@if (Model.Count() > 0)
{
    <div class="table-container">
        <table class="mt-3 table table-striped table-hover text-center">
            <thead>
                <tr>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Name)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Image)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Age)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Address)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Department)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Salary)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.IsActive)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.Email)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.PhoneNumber)</th>
                    <th class="nowrap">@Html.DisplayNameFor(E => E.HireDate)</th>
                    <th class="nowrap">Details</th>
                    <th class="nowrap">Update</th>
                    <th class="nowrap">Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in Model)
                {
                    <tr>
                        <td>@employee.Name</td>
                        <td>
                            <img src="~/Files/Images/@employee.ImageName" width="75" class="img-fluid rounded-circle" />
                        </td>
                        <td>@employee.Age</td>
                        <td>@employee.Address</td>
                        <td>@employee.Department?.Name</td>
                        <td>@Html.DisplayFor(M => employee.Salary)</td>
                        <td>
                            @if (employee.IsActive)
                            {
                                <i class="fas fa-circle text-success"></i>
                            }
                            else
                            {
                                <i class="fas fa-circle text-danger"></i>
                            }
                        </td>
                        <td>@Html.DisplayFor(M => employee.Email)</td>
                        <td>@employee.PhoneNumber</td>
                        <td>@employee.HireDate</td>
                        <partial name="_Buttonspartial" model="@employee.Id" />
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There are No Employees</h3>
    </div>
}

<style>
    .table-container {
        display: flex;
        justify-content: center;
        margin: 0 auto;
    }

        .table-container .table {
            margin: 0 auto;
            width: 100%;
            max-width: 1000px;
        }

    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .nowrap {
        white-space: nowrap;
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">














@* @model IEnumerable<EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
    
    // string VDataMessage = ViewData["Message"] as string; // Enforce Type Safety -> Requires Casting [Strongly Typed]

    // var VBagMessage = ViewBag.Message; // Can't Enforce Type Safety -> Not Requires Casting [Weekly Typed]
}


    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-primary">
            @TempData["Message"]
        </div>
    }




<h1>All Employees</h1>
<br/>
<br />

<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>
<br />
<div class="mt-3 row justify-content-center align-items-center">
     <form asp-action="Index" class="row col-8 offset-2">
         <div class="col-8">
            <input type="text" class="form-control" name="searchInp" id="searchInp" placeholder="Search By Name" />
         </div>
         <div action="col-4">
             <input type="submit" value="Search" class="btn btn-success"/>
         </div>
     </form>
</div>
<br />

@if (Model.Count() > 0) 
{
    <table class="mt-0 table table-striped table-hover ">
         <thead>
           <tr>
              <th>@Html.DisplayNameFor(E=>E.Name)</th>
              <th>@Html.DisplayNameFor(E=>E.Age)</th>
              <th>@Html.DisplayNameFor(E => E.Address)</th>
              <th>@Html.DisplayNameFor(E => E.Department)</th>
              <th>@Html.DisplayNameFor(E=>E.Salary)</th>
              <th>@Html.DisplayNameFor(E=>E.IsActive)</th>
              <th>@Html.DisplayNameFor(E=>E.Email)</th>
              <th>@Html.DisplayNameFor(E=>E.PhoneNumber)</th>
              <th>@Html.DisplayNameFor(E=>E.HireDate)</th>
              <th>Details</th>
              <th>Update</th>
              <th>Delete</th>
           </tr>
        </thead>
        <tbody>
            @foreach(var employee in Model)
            {
               <tr>
                   <td>@employee.Name</td>
                   <td>
                        <img src="~/Files/Images/@employee.ImageName" width="75" class="img-fluid rounded-circle" />
                   </td>
                   <td>@employee.Age</td>
                   <td>@employee.Address</td>
                   <td>@employee.Department?.Name</td>
                   <td>@Html.DisplayFor(M =>  employee.Salary)</td>
                   <td>@Html.DisplayFor(M => employee.IsActive)</td>
                   <td>@Html.DisplayFor(M => employee.Email)</td>
                   <td>@employee.PhoneNumber</td>
                   <td>@employee.HireDate</td>
                   <partial name="_Buttonspartial" model="@employee.Id" />
               </tr> 
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
         <h3>There is No Employees : </h3>
    </div>

}


 *@